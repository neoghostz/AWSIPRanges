# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip pipenv wheel
        pip install flake8 pytest pytest-cov coverage

    - name: Install dependencies
      run: |
        pipenv lock -r --dev > requirements.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./src --statistics

    - name: Test with pytest
      run: |
        PYTHONPATH=.:./src pytest --cov=src --cov-branch --cov-report term-missing ./tests

    - uses: aws-actions/setup-sam@v1
    - run: sam build --use-container -t .sam/transform.yaml -m ./requirements.txt -b ./build -s .

    - name: Craft Version
      run: |
        echo "::set-output name=VERSION::$(cat VERSION)"
      id: version

    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        cd build && zip -r9 ../${{ steps.version.outputs.VERSION }}.${GITHUB_SHA}.zip *

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        automatic_release_tag: v.${{ steps.version.outputs.VERSION }}.${GITHUB_SHA}
        files: |
          ${{ steps.version.outputs.VERSION }}.${GITHUB_SHA}.zip